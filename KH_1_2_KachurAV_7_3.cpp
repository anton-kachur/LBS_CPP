/*
Група: KH–1-2
Здобувач: Качур Антон Вікторович
Лабораторна робота №7
Завдання 3
Тема лабораторної роботи: Розв'язання задач обробки елементів числових матриць.
Завдання: Розробити блок-схему алгоритму та реалізувати його мовою С\С++ для обробки 
елементів матриці рядків/стовпчиків/діагоналі відповідно до індивідуального завдання у 
таблиці 7.3. Розрахунки представити у вигляді одновимірного масиву. Результат вивести 
різними кольорами.
Створити та вивести одномірний масив з середніх арифметичних значень від'ємних елементів 
кожної діагоналі паралельній головній заданої матриці.
*/

#include <time.h>
#include <stdlib.h>
#include <iostream>
#include <stdio.h>
#include <windows.h>

using namespace std;

// Функція, призначена для зміни кольору виводу. 
// В якості аргументів передаються числові значення кольорів тексту і тла
void SetColor(int text, int background) {
	// змінна, яка позначає дескриптор екрану консолі виводу
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	// присвоєння значень кольорів тексту, який виводиться в консоль
	SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text));
}

int main() {
	system("cls"); // викликаємо функцію очистку екрану
	// наступні дві команди призначено для відображення кирилиці у 
	// консольному вікні
	// встановлення кодової сторінки win-cp 1251 для потоку введення
	SetConsoleCP(1251); 
	// встановлення кодової сторінки win-cp 1251 до потоку виведення
	SetConsoleOutputCP(1251);
	
	/* Програмний код для розв'язку поставленого завдання */
	
	srand(time(NULL)); 
	
	// наступні 3 змінні позначають: кі-сть рядків і стовпчиків матриці, саму матрицю, масив середніх 
	// арифметичних значень від'ємних елементів кожної діагоналі паралельній головній заданої матриці
	int n = 3 + rand()%5;
	int matrix[n][n];
	double avgs[2*n-2];
	int i, j;
	
	SetColor(11, 1);
	printf("Матриця matrix(%d, %d):\n", n, n);
	
	// ініціалізуємо елементи матриці та друкуємо їх
	for (i = 0; i < n; i++) { 
		for (j = 0; j < n; j++) { // заповнюємо рядок
			matrix[i][j] = 20 - rand()%50;
			SetColor(11, (j==i ? 4 : 1));
			cout << matrix[i][j] << " ";
		}
		cout << endl;		
	}
	
	// знаходимо середні арифметичні від'ємних елементів на діагоналях
    for (i = 1; i < 2*n - 1; i++) {
        int sum = 0;
        int count = 0;
        if (i < n) {
            for (j = 0; j < n - i; j++) { // діагоналі нижче головної
	            if (matrix[i + j][j] < 0) {
	                sum += matrix[i + j][j];
	                count++;
	            }}
        } else {
            for (j = 0; j < 2*n - 1 - i; j++) { // діагоналі вище головної
                if (matrix[j][i - n + 1 + j] < 0) {
                    sum += matrix[j][i - n + 1 + j];
                    count++;
                }}
		}

        if (count > 0) avgs[i] = double(sum) / double(count);
        else avgs[i] = 1.0;
    }
	
	SetColor(0, 2);
	cout << "\nРезультати: " << endl;
	for (i = 0; i < 2*n - 1; i++) {
		if (avgs[i] < 0.0) cout << avgs[i] << " ";
		if (i == n-1) cout << "\n";
    }
	
	// наступні 3 рядки демонструють встановлення стандартних кольорів тексту і тла та
	// призупинення роботи програми
	SetColor(7, 0);
	cout << "\n";
	system("pause");
	
	return 0;
}
