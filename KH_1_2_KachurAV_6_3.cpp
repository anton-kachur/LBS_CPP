/*
Група: KH–1-2
Здобувач: Качур Антон Вікторович
Лабораторна робота №6
Завдання 3
Тема лабораторної роботи: Розв’язання задач обробки елементів одновимірних числових масивів.
Завдання: Розробити блок-схему алгоритму та реалізувати його мовою С\С++ для пошуку екстремальних 
значень елементів одновимірного масиву відповідно до індивідуального завдання у таблиці 6.3. 
Значення кількості елементів масиву задавати з клавіатури. Елементи вхідного масиву ввести з 
клавіатури. Вивести елементи вхідного масиву та знайдені екстремальні значення на екран, після 
очистки екрану. У випадку, коли екстремальних значень декілька, необхідно підрахувати їх кількість. 
Результат вивести різними кольорами.
Знайти та вивести мінімальний елемент та його індекс у заданому масиві.
*/

#include <iostream>
#include <windows.h>

using namespace std;

// Функція, призначена для зміни кольору виводу. 
// В якості аргументів передаються числові значення кольорів тексту і тла
void SetColor(int text, int background) {
	// змінна, яка позначає дескриптор екрану консолі виводу
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	// присвоєння значень кольорів тексту, який виводиться в консоль
	SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text));
}

int main() {
	system("cls"); // викликаємо функцію очистку екрану
	// наступні дві команди призначено для відображення кирилиці у 
	// консольному вікні
	// встановлення кодової сторінки win-cp 1251 для потоку введення
	SetConsoleCP(1251); 
	// встановлення кодової сторінки win-cp 1251 до потоку виведення
	SetConsoleOutputCP(1251);
	
	/* Програмний код для розв'язку поставленого завдання */	
	int n, i;
	
	SetColor(11, 1);
	cout << "Введіть кількість елементів масиву: ";
	cin >> n;
	
	int arr[n];
	
	SetColor(15, 9);
	cout << "Введіть елементи масиву:" << endl;
	for (i = 0; i < n; i++) { // вводимо елементи вхідного масиву
		cout << i+1 << ") ";
		cin >> arr[i];
	}
	
	// наступні 3 змінні позначають: мінімальний елемент масиву, який далі буде змінюватися, 
	// сума екстремальних елементів (мінімумів, якщо їх більше 1),
	// індекс мінімального елемента
	int min = arr[0];
	int min_sum = 0;
	int min_index;
	
	// друкуємо елементи масиву, паралельно знаходячи мінімальний елемент, індекс цього елемента 
	// та кількість його входжень у масив
	SetColor(0, 2);
	cout << "Вхідний масив: ";
	for (i = 0; i < n; i++) { 
		cout << arr[i] << " ";
		if (arr[i] < min) {
			min = arr[i];
			min_index = i; 
			min_sum = 0;
		}
			
		if (arr[i] == min) 
			min_sum++;
	}
	
	cout << "\nMin: " << min << ", index = " << min_index << endl;
	if (min_sum > 1) // якщо мінімальний елемент зустрічається декілька разів, виводимо к-сть цих разів
		cout << "Min sum: " << min_sum << endl;
	
	// наступні 3 рядки демонструють встановлення стандартних кольорів тексту і тла та
	// призупинення роботи програми
	SetColor(7, 0);
	cout << "\n";
	system("pause");
	
	return 0;
}
