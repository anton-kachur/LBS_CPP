/*
Група: KH–1-2
Здобувач: Качур Антон Вікторович
Лабораторна робота №7
Завдання 1
Тема лабораторної роботи: Розв'язання задач обробки елементів числових матриць.
Завдання: Розробити блок-схему алгоритму та реалізувати його мовою С\С++ для обробки усіх елементів 
матриці при розв'язку індивідуального завдання у таблиці 7.1. Результат вивести різними кольорами
Знайти мінімальний елемент матриці.
*/

#include <time.h>
#include <stdlib.h>
#include <iostream>
#include <stdio.h>
#include <windows.h>

using namespace std;

// Функція, призначена для зміни кольору виводу. 
// В якості аргументів передаються числові значення кольорів тексту і тла
void SetColor(int text, int background) {
	// змінна, яка позначає дескриптор екрану консолі виводу
	HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
	// присвоєння значень кольорів тексту, який виводиться в консоль
	SetConsoleTextAttribute(hStdOut, (WORD)((background << 4) | text));
}

int main() {
	system("cls"); // викликаємо функцію очистку екрану
	// наступні дві команди призначено для відображення кирилиці у 
	// консольному вікні
	// встановлення кодової сторінки win-cp 1251 для потоку введення
	SetConsoleCP(1251); 
	// встановлення кодової сторінки win-cp 1251 до потоку виведення
	SetConsoleOutputCP(1251);
	
	/* Програмний код для розв'язку поставленого завдання */
	
	srand(time(NULL)); 
	
	// наступні 4 змінні позначають: кі-сть рядків матриці, кі-сть стовпчиків, саму матрицю, 
	// мінімальний елемент матриці
	int n = 3 + rand()%5, m = 3 + rand()%5;
	int matrix[n][m];
	int min = 0;
	int i, j;
	
	SetColor(11, 1);
	printf("Матриця matrix(%d, %d):\n", n, m);
	
	// ініціалізуємо елементи матриці та друкуємо їх
	for (i = 0; i < n; i++) { 
		for (j = 0; j < m; j++) { // заповнюємо рядок та друкуємо його
			matrix[i][j] = 40 - rand()%50;
			cout << matrix[i][j] << " ";
			
			if (min > matrix[i][j]) min = matrix[i][j]; 
		}
		cout << endl;		
	}
	
	SetColor(0, 2);
	cout << "\nМінімальний елемент: " << min << endl;
	
	// наступні 3 рядки демонструють встановлення стандартних кольорів тексту і тла та
	// призупинення роботи програми
	SetColor(7, 0);
	cout << "\n";
	system("pause");
	
	return 0;
}
